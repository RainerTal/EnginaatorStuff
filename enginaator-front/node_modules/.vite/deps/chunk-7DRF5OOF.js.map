{
  "version": 3,
  "sources": ["../../@zag-js/switch/dist/index.mjs"],
  "sourcesContent": ["import { createAnatomy } from '@zag-js/anatomy';\nimport { dispatchInputCheckedEvent, setElementChecked, trackFormControl, trackPress, dataAttr, visuallyHiddenStyle, getEventTarget, isSafari } from '@zag-js/dom-query';\nimport { trackFocusVisible, isFocusVisible } from '@zag-js/focus-visible';\nimport { createGuards, createMachine } from '@zag-js/core';\nimport { createProps } from '@zag-js/types';\nimport { createSplitProps } from '@zag-js/utils';\n\n// src/switch.anatomy.ts\nvar anatomy = createAnatomy(\"switch\").parts(\"root\", \"label\", \"control\", \"thumb\");\nvar parts = anatomy.build();\n\n// src/switch.dom.ts\nvar getRootId = (ctx) => ctx.ids?.root ?? `switch:${ctx.id}`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `switch:${ctx.id}:label`;\nvar getThumbId = (ctx) => ctx.ids?.thumb ?? `switch:${ctx.id}:thumb`;\nvar getControlId = (ctx) => ctx.ids?.control ?? `switch:${ctx.id}:control`;\nvar getHiddenInputId = (ctx) => ctx.ids?.hiddenInput ?? `switch:${ctx.id}:input`;\nvar getRootEl = (ctx) => ctx.getById(getRootId(ctx));\nvar getHiddenInputEl = (ctx) => ctx.getById(getHiddenInputId(ctx));\n\n// src/switch.connect.ts\nfunction connect(service, normalize) {\n  const { context, send, prop, scope } = service;\n  const disabled = prop(\"disabled\");\n  const readOnly = prop(\"readOnly\");\n  const checked = !!context.get(\"checked\");\n  const focused = !disabled && context.get(\"focused\");\n  const focusVisible = !disabled && context.get(\"focusVisible\");\n  const dataAttrs = {\n    \"data-active\": dataAttr(context.get(\"active\")),\n    \"data-focus\": dataAttr(focused),\n    \"data-focus-visible\": dataAttr(focusVisible),\n    \"data-readonly\": dataAttr(readOnly),\n    \"data-hover\": dataAttr(context.get(\"hovered\")),\n    \"data-disabled\": dataAttr(disabled),\n    \"data-state\": checked ? \"checked\" : \"unchecked\",\n    \"data-invalid\": dataAttr(prop(\"invalid\"))\n  };\n  return {\n    checked,\n    disabled,\n    focused,\n    setChecked(checked2) {\n      send({ type: \"CHECKED.SET\", checked: checked2, isTrusted: false });\n    },\n    toggleChecked() {\n      send({ type: \"CHECKED.TOGGLE\", checked, isTrusted: false });\n    },\n    getRootProps() {\n      return normalize.label({\n        ...parts.root.attrs,\n        ...dataAttrs,\n        dir: prop(\"dir\"),\n        id: getRootId(scope),\n        htmlFor: getHiddenInputId(scope),\n        onPointerMove() {\n          if (disabled) return;\n          send({ type: \"CONTEXT.SET\", context: { hovered: true } });\n        },\n        onPointerLeave() {\n          if (disabled) return;\n          send({ type: \"CONTEXT.SET\", context: { hovered: false } });\n        },\n        onClick(event) {\n          if (disabled) return;\n          const target = getEventTarget(event);\n          if (target === getHiddenInputEl(scope)) {\n            event.stopPropagation();\n          }\n          if (isSafari()) {\n            getHiddenInputEl(scope)?.focus();\n          }\n        }\n      });\n    },\n    getLabelProps() {\n      return normalize.element({\n        ...parts.label.attrs,\n        ...dataAttrs,\n        dir: prop(\"dir\"),\n        id: getLabelId(scope)\n      });\n    },\n    getThumbProps() {\n      return normalize.element({\n        ...parts.thumb.attrs,\n        ...dataAttrs,\n        dir: prop(\"dir\"),\n        id: getThumbId(scope),\n        \"aria-hidden\": true\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        ...dataAttrs,\n        dir: prop(\"dir\"),\n        id: getControlId(scope),\n        \"aria-hidden\": true\n      });\n    },\n    getHiddenInputProps() {\n      return normalize.input({\n        id: getHiddenInputId(scope),\n        type: \"checkbox\",\n        required: prop(\"required\"),\n        defaultChecked: checked,\n        disabled,\n        \"aria-labelledby\": getLabelId(scope),\n        \"aria-invalid\": prop(\"invalid\"),\n        name: prop(\"name\"),\n        form: prop(\"form\"),\n        value: prop(\"value\"),\n        style: visuallyHiddenStyle,\n        onFocus() {\n          const focusVisible2 = isFocusVisible();\n          send({ type: \"CONTEXT.SET\", context: { focused: true, focusVisible: focusVisible2 } });\n        },\n        onBlur() {\n          send({ type: \"CONTEXT.SET\", context: { focused: false, focusVisible: false } });\n        },\n        onClick(event) {\n          if (readOnly) {\n            event.preventDefault();\n            return;\n          }\n          const checked2 = event.currentTarget.checked;\n          send({ type: \"CHECKED.SET\", checked: checked2, isTrusted: true });\n        }\n      });\n    }\n  };\n}\nvar { not } = createGuards();\nvar machine = createMachine({\n  props({ props: props2 }) {\n    return {\n      defaultChecked: false,\n      label: \"switch\",\n      value: \"on\",\n      ...props2\n    };\n  },\n  initialState() {\n    return \"ready\";\n  },\n  context({ prop, bindable }) {\n    return {\n      checked: bindable(() => ({\n        defaultValue: prop(\"defaultChecked\"),\n        value: prop(\"checked\"),\n        onChange(value) {\n          prop(\"onCheckedChange\")?.({ checked: value });\n        }\n      })),\n      fieldsetDisabled: bindable(() => ({\n        defaultValue: false\n      })),\n      focusVisible: bindable(() => ({\n        defaultValue: false\n      })),\n      active: bindable(() => ({\n        defaultValue: false\n      })),\n      focused: bindable(() => ({\n        defaultValue: false\n      })),\n      hovered: bindable(() => ({\n        defaultValue: false\n      }))\n    };\n  },\n  computed: {\n    isDisabled: ({ context, prop }) => prop(\"disabled\") || context.get(\"fieldsetDisabled\")\n  },\n  watch({ track, prop, context, action }) {\n    track([() => prop(\"disabled\")], () => {\n      action([\"removeFocusIfNeeded\"]);\n    });\n    track([() => context.get(\"checked\")], () => {\n      action([\"syncInputElement\"]);\n    });\n  },\n  effects: [\"trackFormControlState\", \"trackPressEvent\", \"trackFocusVisible\"],\n  on: {\n    \"CHECKED.TOGGLE\": [\n      {\n        guard: not(\"isTrusted\"),\n        actions: [\"toggleChecked\", \"dispatchChangeEvent\"]\n      },\n      {\n        actions: [\"toggleChecked\"]\n      }\n    ],\n    \"CHECKED.SET\": [\n      {\n        guard: not(\"isTrusted\"),\n        actions: [\"setChecked\", \"dispatchChangeEvent\"]\n      },\n      {\n        actions: [\"setChecked\"]\n      }\n    ],\n    \"CONTEXT.SET\": {\n      actions: [\"setContext\"]\n    }\n  },\n  states: {\n    ready: {}\n  },\n  implementations: {\n    guards: {\n      isTrusted: ({ event }) => !!event.isTrusted\n    },\n    effects: {\n      trackPressEvent({ computed, scope, context }) {\n        if (computed(\"isDisabled\")) return;\n        return trackPress({\n          pointerNode: getRootEl(scope),\n          keyboardNode: getHiddenInputEl(scope),\n          isValidKey: (event) => event.key === \" \",\n          onPress: () => context.set(\"active\", false),\n          onPressStart: () => context.set(\"active\", true),\n          onPressEnd: () => context.set(\"active\", false)\n        });\n      },\n      trackFocusVisible({ computed, scope }) {\n        if (computed(\"isDisabled\")) return;\n        return trackFocusVisible({ root: scope.getRootNode() });\n      },\n      trackFormControlState({ context, send, scope }) {\n        return trackFormControl(getHiddenInputEl(scope), {\n          onFieldsetDisabledChange(disabled) {\n            context.set(\"fieldsetDisabled\", disabled);\n          },\n          onFormReset() {\n            const checked = context.initial(\"checked\");\n            send({ type: \"CHECKED.SET\", checked: !!checked, src: \"form-reset\" });\n          }\n        });\n      }\n    },\n    actions: {\n      setContext({ context, event }) {\n        for (const key in event.context) {\n          context.set(key, event.context[key]);\n        }\n      },\n      syncInputElement({ context, scope }) {\n        const inputEl = getHiddenInputEl(scope);\n        if (!inputEl) return;\n        setElementChecked(inputEl, !!context.get(\"checked\"));\n      },\n      removeFocusIfNeeded({ context, prop }) {\n        if (prop(\"disabled\")) {\n          context.set(\"focused\", false);\n        }\n      },\n      setChecked({ context, event }) {\n        context.set(\"checked\", event.checked);\n      },\n      toggleChecked({ context }) {\n        context.set(\"checked\", !context.get(\"checked\"));\n      },\n      dispatchChangeEvent({ context, scope }) {\n        const inputEl = getHiddenInputEl(scope);\n        dispatchInputCheckedEvent(inputEl, { checked: context.get(\"checked\") });\n      }\n    }\n  }\n});\nvar props = createProps()([\n  \"checked\",\n  \"defaultChecked\",\n  \"dir\",\n  \"disabled\",\n  \"form\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"invalid\",\n  \"label\",\n  \"name\",\n  \"onCheckedChange\",\n  \"readOnly\",\n  \"required\",\n  \"value\"\n]);\nvar splitProps = createSplitProps(props);\n\nexport { anatomy, connect, machine, props, splitProps };\n"],
  "mappings": "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",
  "names": []
}
