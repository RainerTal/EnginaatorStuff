{
  "version": 3,
  "sources": ["../../@zag-js/progress/dist/index.mjs"],
  "sourcesContent": ["import { createAnatomy } from '@zag-js/anatomy';\nimport { createMachine, memo } from '@zag-js/core';\nimport { isNumber, getValuePercent, createSplitProps } from '@zag-js/utils';\nimport { createProps } from '@zag-js/types';\n\n// src/progress.anatomy.ts\nvar anatomy = createAnatomy(\"progress\").parts(\n  \"root\",\n  \"label\",\n  \"track\",\n  \"range\",\n  \"valueText\",\n  \"view\",\n  \"circle\",\n  \"circleTrack\",\n  \"circleRange\"\n);\nvar parts = anatomy.build();\n\n// src/progress.dom.ts\nvar getRootId = (ctx) => ctx.ids?.root ?? `progress-${ctx.id}`;\nvar getTrackId = (ctx) => ctx.ids?.track ?? `progress-${ctx.id}-track`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `progress-${ctx.id}-label`;\nvar getCircleId = (ctx) => ctx.ids?.circle ?? `progress-${ctx.id}-circle`;\n\n// src/progress.connect.ts\nfunction connect(service, normalize) {\n  const { context, computed, prop, send, scope } = service;\n  const percent = computed(\"percent\");\n  const percentAsString = computed(\"isIndeterminate\") ? \"\" : computed(\"formatter\").format(computed(\"percent\") / 100);\n  const max = prop(\"max\");\n  const min = prop(\"min\");\n  const orientation = prop(\"orientation\");\n  const translations = prop(\"translations\");\n  const indeterminate = computed(\"isIndeterminate\");\n  const value = context.get(\"value\");\n  const valueAsString = translations?.value({ value, max, percent, min }) ?? \"\";\n  const progressState = getProgressState(value, max);\n  const progressbarProps = {\n    role: \"progressbar\",\n    \"aria-label\": valueAsString,\n    \"data-max\": max,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    \"aria-valuenow\": value ?? void 0,\n    \"data-orientation\": orientation,\n    \"data-state\": progressState\n  };\n  const circleProps2 = getCircleProps(service);\n  return {\n    value,\n    valueAsString,\n    min,\n    max,\n    percent,\n    percentAsString,\n    indeterminate,\n    setValue(value2) {\n      send({ type: \"VALUE.SET\", value: value2 });\n    },\n    setToMax() {\n      send({ type: \"VALUE.SET\", value: max });\n    },\n    setToMin() {\n      send({ type: \"VALUE.SET\", value: min });\n    },\n    getRootProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        ...parts.root.attrs,\n        id: getRootId(scope),\n        \"data-max\": max,\n        \"data-value\": value ?? void 0,\n        \"data-state\": progressState,\n        \"data-orientation\": orientation,\n        style: {\n          \"--percent\": indeterminate ? void 0 : percent\n        }\n      });\n    },\n    getLabelProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        id: getLabelId(scope),\n        ...parts.label.attrs,\n        \"data-orientation\": orientation\n      });\n    },\n    getValueTextProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        \"aria-live\": \"polite\",\n        ...parts.valueText.attrs\n      });\n    },\n    getTrackProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        id: getTrackId(scope),\n        ...parts.track.attrs,\n        ...progressbarProps\n      });\n    },\n    getRangeProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        ...parts.range.attrs,\n        \"data-orientation\": orientation,\n        \"data-state\": progressState,\n        style: {\n          [computed(\"isHorizontal\") ? \"width\" : \"height\"]: indeterminate ? void 0 : `${percent}%`\n        }\n      });\n    },\n    getCircleProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        id: getCircleId(scope),\n        ...parts.circle.attrs,\n        ...progressbarProps,\n        ...circleProps2.root\n      });\n    },\n    getCircleTrackProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        \"data-orientation\": orientation,\n        ...parts.circleTrack.attrs,\n        ...circleProps2.track\n      });\n    },\n    getCircleRangeProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        ...parts.circleRange.attrs,\n        ...circleProps2.range,\n        \"data-state\": progressState\n      });\n    },\n    getViewProps(props2) {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        ...parts.view.attrs,\n        \"data-state\": props2.state,\n        hidden: props2.state !== progressState\n      });\n    }\n  };\n}\nfunction getProgressState(value, maxValue) {\n  return value == null ? \"indeterminate\" : value === maxValue ? \"complete\" : \"loading\";\n}\nvar circleProps = {\n  style: {\n    \"--radius\": \"calc(var(--size) / 2 - var(--thickness) / 2)\",\n    cx: \"calc(var(--size) / 2)\",\n    cy: \"calc(var(--size) / 2)\",\n    r: \"var(--radius)\",\n    fill: \"transparent\",\n    strokeWidth: \"var(--thickness)\"\n  }\n};\nvar rootProps = {\n  style: {\n    width: \"var(--size)\",\n    height: \"var(--size)\"\n  }\n};\nfunction getCircleProps(service) {\n  const { context, computed } = service;\n  return {\n    root: rootProps,\n    track: circleProps,\n    range: {\n      opacity: context.get(\"value\") === 0 ? 0 : void 0,\n      style: {\n        ...circleProps.style,\n        \"--percent\": computed(\"percent\"),\n        \"--circumference\": `calc(2 * 3.14159 * var(--radius))`,\n        \"--offset\": `calc(var(--circumference) * (100 - var(--percent)) / 100)`,\n        strokeDashoffset: `calc(var(--circumference) * ((100 - var(--percent)) / 100))`,\n        strokeDasharray: computed(\"isIndeterminate\") ? void 0 : `var(--circumference)`,\n        transformOrigin: \"center\",\n        transform: \"rotate(-90deg)\"\n      }\n    }\n  };\n}\nvar machine = createMachine({\n  props({ props: props2 }) {\n    const min = props2.min ?? 0;\n    const max = props2.max ?? 100;\n    return {\n      ...props2,\n      max,\n      min,\n      defaultValue: props2.defaultValue ?? midValue(min, max),\n      orientation: \"horizontal\",\n      formatOptions: {\n        style: \"percent\",\n        ...props2.formatOptions\n      },\n      translations: {\n        value: ({ percent }) => percent === -1 ? \"loading...\" : `${percent} percent`,\n        ...props2.translations\n      }\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  entry: [\"validateContext\"],\n  context({ bindable, prop }) {\n    return {\n      value: bindable(() => ({\n        defaultValue: prop(\"defaultValue\"),\n        value: prop(\"value\"),\n        onChange(value) {\n          prop(\"onValueChange\")?.({ value });\n        }\n      }))\n    };\n  },\n  computed: {\n    isIndeterminate: ({ context }) => context.get(\"value\") === null,\n    percent({ context, prop }) {\n      const value = context.get(\"value\");\n      if (!isNumber(value)) return -1;\n      return getValuePercent(value, prop(\"min\"), prop(\"max\")) * 100;\n    },\n    formatter: memo(\n      ({ prop }) => [prop(\"locale\"), prop(\"formatOptions\")],\n      (locale, formatOptions) => new Intl.NumberFormat(locale, formatOptions)\n    ),\n    isHorizontal: ({ prop }) => prop(\"orientation\") === \"horizontal\"\n  },\n  states: {\n    idle: {\n      on: {\n        \"VALUE.SET\": {\n          actions: [\"setValue\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    actions: {\n      setValue: ({ context, event, prop }) => {\n        const value = event.value === null ? null : Math.max(0, Math.min(event.value, prop(\"max\")));\n        context.set(\"value\", value);\n      },\n      validateContext: ({ context, prop }) => {\n        const max = prop(\"max\");\n        const min = prop(\"min\");\n        const value = context.get(\"value\");\n        if (value == null) return;\n        if (!isValidNumber(max)) {\n          throw new Error(`[progress] The max value passed \\`${max}\\` is not a valid number`);\n        }\n        if (!isValidMax(value, max)) {\n          throw new Error(`[progress] The value passed \\`${value}\\` exceeds the max value \\`${max}\\``);\n        }\n        if (!isValidMin(value, min)) {\n          throw new Error(`[progress] The value passed \\`${value}\\` exceeds the min value \\`${min}\\``);\n        }\n      }\n    }\n  }\n});\nvar isValidNumber = (max) => isNumber(max) && !isNaN(max);\nvar isValidMax = (value, max) => isValidNumber(value) && value <= max;\nvar isValidMin = (value, min) => isValidNumber(value) && value >= min;\nvar midValue = (min, max) => min + (max - min) / 2;\nvar props = createProps()([\n  \"dir\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"max\",\n  \"min\",\n  \"orientation\",\n  \"translations\",\n  \"value\",\n  \"onValueChange\",\n  \"defaultValue\",\n  \"formatOptions\",\n  \"locale\"\n]);\nvar splitProps = createSplitProps(props);\n\nexport { anatomy, connect, machine, props, splitProps };\n"],
  "mappings": "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",
  "names": []
}
